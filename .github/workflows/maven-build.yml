# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:

jobs:
  build:
    # env:
    #   ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
    #   ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    #   ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    #   ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.29.0'  
        id: install
      

      - uses: actions/checkout@v4
        name: Checkout code

      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'temurin'
          cache: maven

      - name: Add executable permissions
        run: chmod a+x mvnw

      # - name: Maven install dependencies
      #   run: ./mvnw clean install package

      # - name: Upload JAR artifact 
      #   uses: actions/upload-artifact@4
      #   with:
      #     name: grid-capstone
      #     path: ./target/*.jar
          
      # - name: Install kubectl
      #   run: |
      #       curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #       sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl 
      #       chmod +x kubectl
      #       mkdir -p ~/.local/bin
      #       mv ./kubectl ~/.local/bin/kubectl
      #       kubectl version --client





      - uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az aks get-credentials --resource-group grid-capstone --name dev-grid-cluster --admin
      
      - name: check kubectl
        run: |
          echo "---------"
          echo "---------"
          kubectl get nodes
          kubectl get pods
            
      
      
